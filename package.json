{
    "activationEvents": [
        "*"
    ],
    "author": {
        "name": "Simon Chan",
        "url": "https://github.com/yume-chan"
    },
    "bugs": {
        "url": "https://github.com/yume-chan/vscode-svn/issues"
    },
    "categories": [
        "SCM Providers"
    ],
    "contributes": {
        "commands": [
            {
                "category": "Svn",
                "command": "svn.update",
                "title": "Update"
            },
            {
                "category": "Svn",
                "command": "svn.commit",
                "icon": {
                    "dark": "resources/icons/dark/check.svg",
                    "light": "resources/icons/light/check.svg"
                },
                "title": "Commit"
            },
            {
                "category": "Svn",
                "command": "svn.stage",
                "icon": {
                    "dark": "resources/icons/dark/stage.svg",
                    "light": "resources/icons/light/stage.svg"
                },
                "title": "Stage"
            },
            {
                "category": "Svn",
                "command": "svn.stageAll",
                "icon": {
                    "dark": "resources/icons/dark/stage.svg",
                    "light": "resources/icons/light/stage.svg"
                },
                "title": "Stage All"
            },
            {
                "category": "Svn",
                "command": "svn.unstage",
                "icon": {
                    "dark": "resources/icons/dark/unstage.svg",
                    "light": "resources/icons/light/unstage.svg"
                },
                "title": "Unstage"
            },
            {
                "category": "Svn",
                "command": "svn.unstageAll",
                "icon": {
                    "dark": "resources/icons/dark/unstage.svg",
                    "light": "resources/icons/light/unstage.svg"
                },
                "title": "Unstage All"
            },
            {
                "category": "Svn",
                "command": "svn.refresh",
                "icon": {
                    "dark": "resources/icons/dark/refresh.svg",
                    "light": "resources/icons/light/refresh.svg"
                },
                "title": "Refresh"
            },
            {
                "category": "Svn",
                "command": "svn.openFile",
                "icon": {
                    "dark": "resources/icons/dark/open-file.svg",
                    "light": "resources/icons/light/open-file.svg"
                },
                "title": "Open File"
            }
        ],
        "configuration": {
            "properties": {
                "svn.enabled": {
                    "default": true,
                    "description": "Whether svn is enabled",
                    "scope": "resource",
                    "type": "boolean"
                },
                "svn.show_changes_from": {
                    "default": "working_copy",
                    "description": "When you opened a subfolder, should svn show changes from only the opened folder or the whole working copy.",
                    "enum": [
                        "current_folder",
                        "working_copy"
                    ],
                    "scope": "resource",
                    "type": "string"
                }
            },
            "title": "Svn"
        },
        "menus": {
            "commandPalette": [
                {
                    "command": "svn.update",
                    "when": "config.svn.enabled"
                },
                {
                    "command": "svn.commit",
                    "when": "config.svn.enabled"
                },
                {
                    "command": "svn.stage",
                    "when": "config.svn.enabled"
                },
                {
                    "command": "svn.stageAll",
                    "when": "config.svn.enabled"
                },
                {
                    "command": "svn.unstage",
                    "when": "config.svn.enabled"
                },
                {
                    "command": "svn.unstageAll",
                    "when": "config.svn.enabled"
                },
                {
                    "command": "svn.refresh",
                    "when": "config.svn.enabled"
                },
                {
                    "command": "svn.openFile",
                    "when": "config.svn.enabled"
                }
            ],
            "scm/resourceGroup/context": [
                {
                    "command": "svn.stageAll",
                    "group": "inline",
                    "when": "scmProvider == svn && scmResourceGroup != staged"
                },
                {
                    "command": "svn.stageAll",
                    "group": "1_modification",
                    "when": "scmProvider == svn && scmResourceGroup != staged"
                },
                {
                    "command": "svn.unstageAll",
                    "group": "inline",
                    "when": "scmProvider == svn && scmResourceGroup == staged"
                },
                {
                    "command": "svn.unstageAll",
                    "group": "1_modification",
                    "when": "scmProvider == svn && scmResourceGroup == staged"
                }
            ],
            "scm/resourceState/context": [
                {
                    "command": "svn.stage",
                    "group": "1_modification",
                    "when": "scmProvider == svn && scmResourceGroup != staged"
                },
                {
                    "command": "svn.stage",
                    "group": "inline",
                    "when": "scmProvider == svn && scmResourceGroup != staged"
                },
                {
                    "command": "svn.unstage",
                    "group": "1_modification",
                    "when": "scmProvider == svn && scmResourceGroup == staged"
                },
                {
                    "command": "svn.unstage",
                    "group": "inline",
                    "when": "scmProvider == svn && scmResourceGroup == staged"
                },
                {
                    "command": "svn.openFile",
                    "group": "navigation",
                    "when": "scmProvider == svn"
                }
            ],
            "scm/title": [
                {
                    "command": "svn.refresh",
                    "group": "navigation",
                    "when": "scmProvider == svn"
                },
                {
                    "command": "svn.commit",
                    "group": "navigation",
                    "when": "scmProvider == svn"
                }
            ]
        }
    },
    "dependencies": {
        "node-svn": "https://github.com/yume-chan/node-svn/releases/download/v0.0.1-alpha/node-svn-0.0.1.tgz"
    },
    "description": "An experimental extension to provide SVN support for Visual Studio Code.",
    "devDependencies": {
        "@types/mocha": "^2.2.44",
        "@types/node": "^8.0.57",
        "mocha": "^4.0.1",
        "tslint": "^5.8.0",
        "tslint-language-service": "^0.9.7",
        "typescript": "^2.6.2",
        "vsce": "^1.35.0",
        "vscode": "^1.1.10"
    },
    "displayName": "Svn",
    "engines": {
        "vscode": "^1.18.0"
    },
    "license": "MIT",
    "main": "./out/extension",
    "name": "vscode-svn",
    "preview": true,
    "publisher": "simonchan",
    "repository": {
        "type": "git",
        "url": "https://github.com/yume-chan/vscode-svn"
    },
    "scripts": {
        "compile": "tsc -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test",
        "vscode:prepublish": "npm run compile",
        "watch": "tsc -watch -p ./"
    },
    "version": "0.0.8"
}
